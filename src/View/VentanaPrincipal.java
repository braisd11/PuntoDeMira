//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
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Database.Conexion;
import Database.Partida;
import Model.Timers;
import Model.Xogo;
import Model.obstaculos.Obstaculo;
import Model.obxetivos.Obxetivo;
import com.jtattoo.plaf.graphite.GraphiteLookAndFeel;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author a22braisdr
 */
public class VentanaPrincipal extends javax.swing.JFrame{
    private Xogo xogo1;
    private Conexion con;
    private Timers timer;
    private ActionListener clickObxetivo;
    private MouseListener mouse;
    /**
     * Array de botóns dos obstáculos
     */
    public ArrayList<JButton>arrayBotones=new ArrayList<>();

    /**
     *
     * @return
     */
    public Xogo getXogo1() {
        return xogo1;
    }

    /**
     *
     * @param xogo1
     */
    public void setXogo1(Xogo xogo1) {
        this.xogo1 = xogo1;
    }

    public JLabel getLabelRecargando() {
        return labelRecargando;
    }

    public void setLabelRecargando(JLabel labelRecargando) {
        this.labelRecargando = labelRecargando;
    }

    public JPanel getPanelJuego() {
        return panelJuego;
    }

    public void setPanelJuego(JPanel panelJuego) {
        this.panelJuego = panelJuego;
    }

    public JLabel getLabelTiempo() {
        return labelTiempo;
    }

    public void setLabelTiempo(JLabel labelTiempo) {
        this.labelTiempo = labelTiempo;
    }

    public JButton getBotonIniciarSesion() {
        return botonIniciarSesion;
    }

    public JButton getBotonRegistrarse() {
        return botonRegistrarse;
    }

    public JButton getBotonGuardarPuntuacion() {
        return botonGuardarPuntuacion;
    }

    public JButton getBotonMostrarPuntuaciones() {
        return botonMostrarPuntuaciones;
    }

    public JButton getBotonReiniciarEstadisticas() {
        return botonReiniciarEstadisticas;
    }
    
    
    
    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
        this.setLocationRelativeTo(null);
        con=new Conexion(this); 
        xogo1=new Xogo(this);
        timer=new Timers(this);
        juego.setFocusable(true);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dialogDificultad = new javax.swing.JDialog();
        panelDialog = new javax.swing.JPanel();
        botonEstatico = new javax.swing.JButton();
        botonDinamico = new javax.swing.JButton();
        labelBackgroundDialog = new javax.swing.JLabel();
        dialogInstrucciones = new javax.swing.JDialog();
        textoInstrucciones = new javax.swing.JTextArea();
        labelBackgroundDialog1 = new javax.swing.JLabel();
        dialogInicioSesion = new javax.swing.JDialog();
        panelDialogInicioSesion = new javax.swing.JPanel();
        labelUsuario = new javax.swing.JLabel();
        labelContrasinal = new javax.swing.JLabel();
        botonEnviarInicioSesion = new javax.swing.JButton();
        textUsuarioInicio = new javax.swing.JTextField();
        passwordUsuarioInicio = new javax.swing.JPasswordField();
        fondoPantallaInicio = new javax.swing.JLabel();
        dialogRegistrar = new javax.swing.JDialog();
        panelDialogRegistrarse = new javax.swing.JPanel();
        labelUsuarioNovo = new javax.swing.JLabel();
        labelContrasinalNovo = new javax.swing.JLabel();
        botonEnviarNovo = new javax.swing.JButton();
        textUsuarioNovo = new javax.swing.JTextField();
        passwordUsuarioNovo = new javax.swing.JPasswordField();
        fondoPantallaRegistrar = new javax.swing.JLabel();
        dialogPuntuaciones = new javax.swing.JDialog();
        panelPuntuaciones = new javax.swing.JPanel();
        tituloPuntuaciones = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPuntuaciones = new javax.swing.JTable();
        fondoPuntuaciones = new javax.swing.JLabel();
        panelInicio = new javax.swing.JPanel();
        panelBotonesInicio = new javax.swing.JPanel();
        botonIniciarSesion = new javax.swing.JButton();
        botonRegistrarse = new javax.swing.JButton();
        botonAccederInvitado = new javax.swing.JButton();
        botonCerrar = new javax.swing.JButton();
        fondoPantallaPrincipal = new javax.swing.JLabel();
        panelPrincipal = new javax.swing.JPanel();
        panelBotones = new javax.swing.JPanel();
        botonJugar = new javax.swing.JButton();
        botonDificultad = new javax.swing.JButton();
        botonSalir = new javax.swing.JButton();
        botonInstrucciones = new javax.swing.JButton();
        botonReiniciarEstadisticas = new javax.swing.JButton();
        fondoPantalla = new javax.swing.JLabel();
        labelTitulo = new javax.swing.JLabel();
        juego = new javax.swing.JPanel();
        panelJuego = new javax.swing.JPanel();
        fondoJuego = new javax.swing.JLabel();
        panelLateral = new javax.swing.JPanel();
        labelTituloAciertos = new javax.swing.JLabel();
        labelTituloErrores = new javax.swing.JLabel();
        labelTituloCargador = new javax.swing.JLabel();
        labelAciertos = new javax.swing.JLabel();
        labelErrores = new javax.swing.JLabel();
        labelRecargando = new javax.swing.JLabel();
        labelCargador = new javax.swing.JLabel();
        labelRecarga = new javax.swing.JLabel();
        labelTituloTiempo = new javax.swing.JLabel();
        labelTiempo = new javax.swing.JLabel();
        toggleBotonPausa = new javax.swing.JToggleButton();
        fondoLateral = new javax.swing.JLabel();
        panelGameOver = new javax.swing.JPanel();
        labelBackgroundGameOver = new javax.swing.JLabel();
        panelBotonesGameOver = new javax.swing.JPanel();
        botonReiniciar = new javax.swing.JButton();
        botonSalirJuego = new javax.swing.JButton();
        botonGuardarPuntuacion = new javax.swing.JButton();
        botonMostrarPuntuaciones = new javax.swing.JButton();

        dialogDificultad.setLocation(new java.awt.Point(420, 300));
        dialogDificultad.setSize(new java.awt.Dimension(500, 500));
        dialogDificultad.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelDialog.setBackground(new java.awt.Color(102, 51, 0));
        panelDialog.setOpaque(false);

        botonEstatico.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        botonEstatico.setForeground(new java.awt.Color(0, 0, 0));
        botonEstatico.setText("ESTÁTICO");
        botonEstatico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEstaticoActionPerformed(evt);
            }
        });

        botonDinamico.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        botonDinamico.setForeground(new java.awt.Color(0, 0, 0));
        botonDinamico.setText("DINÁMICO");
        botonDinamico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonDinamicoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDialogLayout = new javax.swing.GroupLayout(panelDialog);
        panelDialog.setLayout(panelDialogLayout);
        panelDialogLayout.setHorizontalGroup(
            panelDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDialogLayout.createSequentialGroup()
                .addGap(142, 142, 142)
                .addGroup(panelDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(botonEstatico, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonDinamico))
                .addContainerGap(146, Short.MAX_VALUE))
        );

        panelDialogLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {botonDinamico, botonEstatico});

        panelDialogLayout.setVerticalGroup(
            panelDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDialogLayout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addComponent(botonEstatico, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(botonDinamico)
                .addContainerGap(186, Short.MAX_VALUE))
        );

        panelDialogLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {botonDinamico, botonEstatico});

        dialogDificultad.getContentPane().add(panelDialog, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        labelBackgroundDialog.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        try{
            labelBackgroundDialog.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/fondoPrincipal.jpg"))); // NOI18N
        }
        catch (NullPointerException e) {
        }
        dialogDificultad.getContentPane().add(labelBackgroundDialog, new org.netbeans.lib.awtextra.AbsoluteConstraints(-4, 0, 510, 500));

        dialogInstrucciones.setLocation(new java.awt.Point(420, 200));
        dialogInstrucciones.setMinimumSize(new java.awt.Dimension(600, 500));
        dialogInstrucciones.setResizable(false);
        dialogInstrucciones.setSize(new java.awt.Dimension(600, 550));
        dialogInstrucciones.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        textoInstrucciones.setOpaque(true);
        textoInstrucciones.setEditable(false);
        textoInstrucciones.setBackground(new java.awt.Color(0, 0, 0));
        textoInstrucciones.setColumns(20);
        textoInstrucciones.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        textoInstrucciones.setForeground(new java.awt.Color(255, 255, 255));
        textoInstrucciones.setLineWrap(true);
        textoInstrucciones.setRows(5);
        textoInstrucciones.setText("\t\t\n\t\t\tINSTRUCCIONES:\n\t\n- Debes clickar sobre los objetivos pequeños que aparecen en pantalla.\n\n- Hay tres objetivos.\n\n- Clickar sobre un objetivo sumara un acierto y aumentará el tiempo de juego en 2 segundos si se trata del objetivo verde,3 si es el objetivo rojo y 4 si es el objetivo rosa.\n\n- OJO! Pasar por encima de un obstáculo restará 5 segundos y sumará un error. Estos            obstáculos cambiarán de posición cada 10 segundos.\n\n- Cada obstáculo tiene varios botones, por lo que puede llegar a restar más de 5 segundos.\n\n- Cada 30 aciertos, los errores restarán 2 segundos más, y cada 50 aciertos los aciertos sum   arán 1 segundo más\n\n- Podemos quedarnos sin balas (tendremos 10), por lo que tendremos que recargar.\n\n- La recarga dura 3 segundos.\n\n- El objetivo será aguantar el máximo tiempo posible clickando sobre los objetivos.\n\n- Tendremos dos dificultades:\n\n\t- Estático: dos obstáculos y tres objetivos siempre visibles.\n\n\t- Dinámico: tres obstáculos y tres objetivos, que aparecen cada cierto tiempo.\n\t\t- Verde: siempre presente\n\t\t- Rojo: aparece cada 10 segundos y dura 5 segundos\n\t\t- Rosa: aparece cada 5 segundos y dura 2 segundos");
        textoInstrucciones.setMaximumSize(new java.awt.Dimension(600, 550));
        textoInstrucciones.setMinimumSize(new java.awt.Dimension(600, 550));
        textoInstrucciones.setPreferredSize(new java.awt.Dimension(600, 550));
        dialogInstrucciones.getContentPane().add(textoInstrucciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, -10, -1, 560));

        labelBackgroundDialog1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        try{
            labelBackgroundDialog1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/fondoPrincipal.jpg"))); // NOI18N
        }
        catch (NullPointerException e) {
        }
        labelBackgroundDialog1.setMaximumSize(new java.awt.Dimension(600, 550));
        labelBackgroundDialog1.setMinimumSize(new java.awt.Dimension(600, 550));
        labelBackgroundDialog1.setOpaque(true);
        labelBackgroundDialog1.setPreferredSize(new java.awt.Dimension(600, 550));
        dialogInstrucciones.getContentPane().add(labelBackgroundDialog1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-4, 0, -1, -1));

        dialogInicioSesion.setLocation(new java.awt.Point(420, 300));
        dialogInicioSesion.setMinimumSize(new java.awt.Dimension(400, 320));
        dialogInicioSesion.setResizable(false);
        dialogInicioSesion.setSize(new java.awt.Dimension(400, 320));
        dialogInicioSesion.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelDialogInicioSesion.setMaximumSize(new java.awt.Dimension(400, 320));
        panelDialogInicioSesion.setMinimumSize(new java.awt.Dimension(400, 320));
        panelDialogInicioSesion.setOpaque(false);
        panelDialogInicioSesion.setPreferredSize(new java.awt.Dimension(400, 320));

        labelUsuario.setForeground(new java.awt.Color(255, 255, 255));
        labelUsuario.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelUsuario.setText("USUARIO:");

        labelContrasinal.setForeground(new java.awt.Color(255, 255, 255));
        labelContrasinal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelContrasinal.setText("CONTRASEÑA:");

        botonEnviarInicioSesion.setText("ENVIAR");
        botonEnviarInicioSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEnviarInicioSesionActionPerformed(evt);
            }
        });

        textUsuarioInicio.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        textUsuarioInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textUsuarioInicioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDialogInicioSesionLayout = new javax.swing.GroupLayout(panelDialogInicioSesion);
        panelDialogInicioSesion.setLayout(panelDialogInicioSesionLayout);
        panelDialogInicioSesionLayout.setHorizontalGroup(
            panelDialogInicioSesionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDialogInicioSesionLayout.createSequentialGroup()
                .addGroup(panelDialogInicioSesionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDialogInicioSesionLayout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(panelDialogInicioSesionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelContrasinal)
                            .addComponent(labelUsuario))
                        .addGap(18, 18, 18)
                        .addGroup(panelDialogInicioSesionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textUsuarioInicio)
                            .addComponent(passwordUsuarioInicio, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)))
                    .addGroup(panelDialogInicioSesionLayout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(botonEnviarInicioSesion)))
                .addContainerGap(93, Short.MAX_VALUE))
        );
        panelDialogInicioSesionLayout.setVerticalGroup(
            panelDialogInicioSesionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDialogInicioSesionLayout.createSequentialGroup()
                .addContainerGap(85, Short.MAX_VALUE)
                .addGroup(panelDialogInicioSesionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelUsuario)
                    .addComponent(textUsuarioInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(panelDialogInicioSesionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelContrasinal)
                    .addComponent(passwordUsuarioInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addComponent(botonEnviarInicioSesion)
                .addGap(83, 83, 83))
        );

        dialogInicioSesion.getContentPane().add(panelDialogInicioSesion, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        try{
            fondoPantallaInicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/fondoPrincipal.jpg"))); // NOI18N
        }
        catch (NullPointerException e) {
            labelUsuario.setForeground(Color.black);
            labelContrasinal.setForeground(Color.black);
        }
        fondoPantallaInicio.setMaximumSize(new java.awt.Dimension(400, 320));
        fondoPantallaInicio.setMinimumSize(new java.awt.Dimension(400, 320));
        fondoPantallaInicio.setPreferredSize(new java.awt.Dimension(400, 320));
        dialogInicioSesion.getContentPane().add(fondoPantallaInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        dialogRegistrar.setLocation(new java.awt.Point(420, 300));
        dialogRegistrar.setResizable(false);
        dialogRegistrar.setSize(new java.awt.Dimension(400, 320));
        dialogRegistrar.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelDialogRegistrarse.setMaximumSize(new java.awt.Dimension(400, 320));
        panelDialogRegistrarse.setMinimumSize(new java.awt.Dimension(400, 320));
        panelDialogRegistrarse.setOpaque(false);
        panelDialogRegistrarse.setPreferredSize(new java.awt.Dimension(400, 320));

        labelUsuarioNovo.setForeground(new java.awt.Color(255, 255, 255));
        labelUsuarioNovo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelUsuarioNovo.setText("USUARIO:");

        labelContrasinalNovo.setForeground(new java.awt.Color(255, 255, 255));
        labelContrasinalNovo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelContrasinalNovo.setText("CONTRASEÑA:");

        botonEnviarNovo.setText("ENVIAR");
        botonEnviarNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEnviarNovoActionPerformed(evt);
            }
        });

        textUsuarioNovo.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        textUsuarioNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textUsuarioNovoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDialogRegistrarseLayout = new javax.swing.GroupLayout(panelDialogRegistrarse);
        panelDialogRegistrarse.setLayout(panelDialogRegistrarseLayout);
        panelDialogRegistrarseLayout.setHorizontalGroup(
            panelDialogRegistrarseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDialogRegistrarseLayout.createSequentialGroup()
                .addGroup(panelDialogRegistrarseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDialogRegistrarseLayout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(panelDialogRegistrarseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelContrasinalNovo)
                            .addComponent(labelUsuarioNovo))
                        .addGap(18, 18, 18)
                        .addGroup(panelDialogRegistrarseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textUsuarioNovo, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                            .addComponent(passwordUsuarioNovo)))
                    .addGroup(panelDialogRegistrarseLayout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(botonEnviarNovo)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelDialogRegistrarseLayout.setVerticalGroup(
            panelDialogRegistrarseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDialogRegistrarseLayout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(panelDialogRegistrarseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelUsuarioNovo)
                    .addComponent(textUsuarioNovo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(panelDialogRegistrarseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelContrasinalNovo)
                    .addComponent(passwordUsuarioNovo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addComponent(botonEnviarNovo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        dialogRegistrar.getContentPane().add(panelDialogRegistrarse, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 320));

        try{
            fondoPantallaRegistrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/fondoPrincipal.jpg"))); // NOI18N
        }
        catch (NullPointerException e) {
            labelUsuarioNovo.setForeground(Color.black);
            labelContrasinalNovo.setForeground(Color.black);
        }
        fondoPantallaRegistrar.setMaximumSize(new java.awt.Dimension(400, 320));
        fondoPantallaRegistrar.setMinimumSize(new java.awt.Dimension(400, 320));
        fondoPantallaRegistrar.setPreferredSize(new java.awt.Dimension(400, 320));
        dialogRegistrar.getContentPane().add(fondoPantallaRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        dialogPuntuaciones.setLocation(new java.awt.Point(400, 250));
        dialogPuntuaciones.setMinimumSize(new java.awt.Dimension(650, 500));
        dialogPuntuaciones.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelPuntuaciones.setMaximumSize(new java.awt.Dimension(650, 500));
        panelPuntuaciones.setMinimumSize(new java.awt.Dimension(650, 500));
        panelPuntuaciones.setOpaque(false);
        panelPuntuaciones.setPreferredSize(new java.awt.Dimension(650, 500));

        tituloPuntuaciones.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        tituloPuntuaciones.setForeground(new java.awt.Color(255, 255, 255));
        tituloPuntuaciones.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tituloPuntuaciones.setText("PUNTUACIONES");
        tituloPuntuaciones.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        tablaPuntuaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tablaPuntuaciones.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        tablaPuntuaciones.setEnabled(false);
        tablaPuntuaciones.setFillsViewportHeight(true);
        tablaPuntuaciones.setGridColor(new java.awt.Color(0, 0, 0));
        tablaPuntuaciones.setOpaque(false);
        tablaPuntuaciones.setShowGrid(true);
        tablaPuntuaciones.getTableHeader().setResizingAllowed(false);
        tablaPuntuaciones.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tablaPuntuaciones);

        javax.swing.GroupLayout panelPuntuacionesLayout = new javax.swing.GroupLayout(panelPuntuaciones);
        panelPuntuaciones.setLayout(panelPuntuacionesLayout);
        panelPuntuacionesLayout.setHorizontalGroup(
            panelPuntuacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPuntuacionesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tituloPuntuaciones)
                .addGap(219, 219, 219))
            .addGroup(panelPuntuacionesLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        panelPuntuacionesLayout.setVerticalGroup(
            panelPuntuacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPuntuacionesLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(tituloPuntuaciones)
                .addGap(50, 50, 50)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                .addGap(111, 111, 111))
        );

        dialogPuntuaciones.getContentPane().add(panelPuntuaciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 640, -1));

        fondoPuntuaciones.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        try{
            fondoPuntuaciones.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/fondoPrincipal.jpg"))); // NOI18N
        }
        catch (NullPointerException e){
            tituloPuntuaciones.setForeground(Color.black);
        }
        fondoPuntuaciones.setMaximumSize(new java.awt.Dimension(650, 500));
        fondoPuntuaciones.setMinimumSize(new java.awt.Dimension(650, 500));
        fondoPuntuaciones.setPreferredSize(new java.awt.Dimension(650, 500));
        dialogPuntuaciones.getContentPane().add(fondoPuntuaciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        setLocation(new java.awt.Point(0, 0));
        setMaximumSize(new java.awt.Dimension(1000, 700));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelInicio.setComponentZOrder(panelBotonesInicio, 0);
        panelInicio.setMaximumSize(new java.awt.Dimension(1000, 700));
        panelInicio.setMinimumSize(new java.awt.Dimension(1000, 700));
        panelInicio.setPreferredSize(new java.awt.Dimension(1000, 700));

        panelBotonesInicio.setOpaque(false);

        botonIniciarSesion.setFont(new java.awt.Font("Yu Gothic UI", 0, 24)); // NOI18N
        botonIniciarSesion.setForeground(new java.awt.Color(0, 0, 0));
        botonIniciarSesion.setText("INICIAR SESIÓN");
        botonIniciarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonIniciarSesionActionPerformed(evt);
            }
        });

        botonRegistrarse.setFont(new java.awt.Font("Yu Gothic UI", 0, 24)); // NOI18N
        botonRegistrarse.setForeground(new java.awt.Color(0, 0, 0));
        botonRegistrarse.setText("REGISTRARSE");
        botonRegistrarse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegistrarseActionPerformed(evt);
            }
        });

        botonAccederInvitado.setFont(new java.awt.Font("Yu Gothic UI", 0, 24)); // NOI18N
        botonAccederInvitado.setForeground(new java.awt.Color(0, 0, 0));
        botonAccederInvitado.setText("ACCEDER COMO INVITADO");
        botonAccederInvitado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAccederInvitadoActionPerformed(evt);
            }
        });

        botonCerrar.setFont(new java.awt.Font("Yu Gothic UI", 0, 24)); // NOI18N
        botonCerrar.setForeground(new java.awt.Color(0, 0, 0));
        botonCerrar.setText("CERRAR");
        botonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBotonesInicioLayout = new javax.swing.GroupLayout(panelBotonesInicio);
        panelBotonesInicio.setLayout(panelBotonesInicioLayout);
        panelBotonesInicioLayout.setHorizontalGroup(
            panelBotonesInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBotonesInicioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBotonesInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBotonesInicioLayout.createSequentialGroup()
                        .addGroup(panelBotonesInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(botonAccederInvitado)
                            .addComponent(botonCerrar))
                        .addGap(193, 193, 193))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBotonesInicioLayout.createSequentialGroup()
                        .addComponent(botonIniciarSesion, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)
                        .addComponent(botonRegistrarse)))
                .addContainerGap())
        );

        panelBotonesInicioLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {botonAccederInvitado, botonCerrar, botonIniciarSesion, botonRegistrarse});

        panelBotonesInicioLayout.setVerticalGroup(
            panelBotonesInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBotonesInicioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBotonesInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonIniciarSesion, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonRegistrarse))
                .addGap(52, 52, 52)
                .addComponent(botonAccederInvitado)
                .addGap(40, 40, 40)
                .addComponent(botonCerrar)
                .addContainerGap())
        );

        panelBotonesInicioLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {botonAccederInvitado, botonCerrar, botonIniciarSesion, botonRegistrarse});

        try{
            fondoPantallaPrincipal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/fondoPrincipal.jpg"))); // NOI18N
        }
        catch (NullPointerException e) {
            JOptionPane.showMessageDialog(this, "Erro ao cargar o Fondo de Pantalla");
        }
        fondoPantallaPrincipal.setOpaque(true);
        fondoPantallaPrincipal.setPreferredSize(new java.awt.Dimension(1000, 700));

        javax.swing.GroupLayout panelInicioLayout = new javax.swing.GroupLayout(panelInicio);
        panelInicio.setLayout(panelInicioLayout);
        panelInicioLayout.setHorizontalGroup(
            panelInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInicioLayout.createSequentialGroup()
                .addComponent(fondoPantallaPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(panelInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelInicioLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelBotonesInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        panelInicioLayout.setVerticalGroup(
            panelInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInicioLayout.createSequentialGroup()
                .addComponent(fondoPantallaPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelInicioLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelBotonesInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        getContentPane().add(panelInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        panelPrincipal.setVisible(false);
        panelPrincipal.setPreferredSize(new java.awt.Dimension(1000, 700));

        panelBotones.setBackground(new java.awt.Color(255, 204, 204));
        panelBotones.setOpaque(false);
        panelBotones.setPreferredSize(new java.awt.Dimension(450, 450));

        botonJugar.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        botonJugar.setForeground(new java.awt.Color(0, 0, 0));
        botonJugar.setText("JUGAR");
        botonJugar.setAlignmentY(0.0F);
        botonJugar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonJugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonJugarActionPerformed(evt);
            }
        });

        botonDificultad.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        botonDificultad.setForeground(new java.awt.Color(0, 0, 0));
        botonDificultad.setText("DIFICULTAD");
        botonDificultad.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonDificultad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonDificultadActionPerformed(evt);
            }
        });

        botonSalir.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        botonSalir.setForeground(new java.awt.Color(0, 0, 0));
        botonSalir.setText("SALIR");
        botonSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });

        botonInstrucciones.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        botonInstrucciones.setForeground(new java.awt.Color(0, 0, 0));
        botonInstrucciones.setText("INSTRUCCIONES");
        botonInstrucciones.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonInstrucciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonInstruccionesActionPerformed(evt);
            }
        });

        botonReiniciarEstadisticas.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        botonReiniciarEstadisticas.setForeground(new java.awt.Color(0, 0, 0));
        botonReiniciarEstadisticas.setText("REINICIAR ESTADÍSTICAS");
        botonReiniciarEstadisticas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonReiniciarEstadisticas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonReiniciarEstadisticasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBotonesLayout = new javax.swing.GroupLayout(panelBotones);
        panelBotones.setLayout(panelBotonesLayout);
        panelBotonesLayout.setHorizontalGroup(
            panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBotonesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(botonDificultad)
                    .addComponent(botonInstrucciones)
                    .addComponent(botonReiniciarEstadisticas))
                .addGap(76, 76, 76))
            .addGroup(panelBotonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonJugar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonSalir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelBotonesLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {botonDificultad, botonInstrucciones, botonJugar, botonReiniciarEstadisticas, botonSalir});

        panelBotonesLayout.setVerticalGroup(
            panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBotonesLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(botonJugar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(botonDificultad, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(botonInstrucciones, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(botonReiniciarEstadisticas, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(botonSalir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelBotonesLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {botonJugar, botonSalir});

        panelBotonesLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {botonDificultad, botonInstrucciones, botonReiniciarEstadisticas});

        try{
            fondoPantalla.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/fondoPrincipal.jpg"))); // NOI18N
        }
        catch (NullPointerException e) {
            labelTitulo.setForeground(Color.black);
        }
        fondoPantalla.setPreferredSize(new java.awt.Dimension(1000, 700));

        labelTitulo.setBackground(new java.awt.Color(0, 0, 0));
        labelTitulo.setFont(new java.awt.Font("Source Serif Pro Black", 0, 48)); // NOI18N
        labelTitulo.setForeground(new java.awt.Color(200, 100, 50));
        labelTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTitulo.setText("PUNTO DE MIRA");

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                .addContainerGap(283, Short.MAX_VALUE)
                .addComponent(panelBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(267, 267, 267))
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(312, 312, 312)
                .addComponent(labelTitulo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelPrincipalLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(fondoPantalla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(labelTitulo)
                .addGap(58, 58, 58)
                .addComponent(panelBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(109, Short.MAX_VALUE))
            .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelPrincipalLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(fondoPantalla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        getContentPane().add(panelPrincipal, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        juego.setVisible(false);
        juego.setBackground(new java.awt.Color(255, 204, 204));
        juego.setMaximumSize(new java.awt.Dimension(1000, 700));
        juego.setMinimumSize(new java.awt.Dimension(1000, 700));
        juego.setPreferredSize(new java.awt.Dimension(1000, 700));
        juego.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                juegoMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                juegoMouseExited(evt);
            }
        });
        juego.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                juegoKeyPressed(evt);
            }
        });
        juego.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelJuego.setBackground(new java.awt.Color(0, 0, 0));
        panelJuego.setMaximumSize(new java.awt.Dimension(700, 700));
        panelJuego.setMinimumSize(new java.awt.Dimension(700, 700));
        panelJuego.setPreferredSize(new java.awt.Dimension(700, 700));
        panelJuego.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelJuegoMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                panelJuegoMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panelJuegoMousePressed(evt);
            }
        });
        panelJuego.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                panelJuegoKeyPressed(evt);
            }
        });

        setAlwaysOnTop(false);
        fondoJuego.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        try{
            fondoJuego.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/fondoJuego.jpg"))); // NOI18N
        }
        catch (NullPointerException e) {
            JOptionPane.showMessageDialog(this, "Non se cargou o Fondo de Pantalla correctamente");
        }
        fondoJuego.setMaximumSize(new java.awt.Dimension(700, 700));
        fondoJuego.setMinimumSize(new java.awt.Dimension(700, 700));
        fondoJuego.setPreferredSize(new java.awt.Dimension(700, 700));

        javax.swing.GroupLayout panelJuegoLayout = new javax.swing.GroupLayout(panelJuego);
        panelJuego.setLayout(panelJuegoLayout);
        panelJuegoLayout.setHorizontalGroup(
            panelJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
            .addGroup(panelJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelJuegoLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(fondoJuego, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        panelJuegoLayout.setVerticalGroup(
            panelJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
            .addGroup(panelJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelJuegoLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(fondoJuego, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        juego.add(panelJuego, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        panelLateral.setBackground(new java.awt.Color(255, 204, 204));
        panelLateral.setMaximumSize(new java.awt.Dimension(300, 700));
        panelLateral.setMinimumSize(new java.awt.Dimension(300, 700));
        panelLateral.setOpaque(false);
        panelLateral.setPreferredSize(new java.awt.Dimension(300, 700));
        panelLateral.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                panelLateralKeyPressed(evt);
            }
        });
        panelLateral.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelTituloAciertos.setFont(new java.awt.Font("Segoe UI Semibold", 0, 36)); // NOI18N
        labelTituloAciertos.setForeground(new java.awt.Color(255, 255, 255));
        labelTituloAciertos.setText("ACIERTOS");
        panelLateral.add(labelTituloAciertos, new org.netbeans.lib.awtextra.AbsoluteConstraints(63, 25, 217, 40));

        labelTituloErrores.setFont(new java.awt.Font("Segoe UI Semibold", 0, 36)); // NOI18N
        labelTituloErrores.setForeground(new java.awt.Color(255, 255, 255));
        labelTituloErrores.setText("ERRORES");
        panelLateral.add(labelTituloErrores, new org.netbeans.lib.awtextra.AbsoluteConstraints(63, 142, 217, 40));

        labelTituloCargador.setFont(new java.awt.Font("Segoe UI Semibold", 0, 36)); // NOI18N
        labelTituloCargador.setForeground(new java.awt.Color(255, 255, 255));
        labelTituloCargador.setText("CARGADOR");
        panelLateral.add(labelTituloCargador, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 538, 217, 40));

        labelAciertos.setFont(new java.awt.Font("Segoe UI Semibold", 0, 36)); // NOI18N
        labelAciertos.setForeground(new java.awt.Color(255, 255, 255));
        labelAciertos.setText("0");
        panelLateral.add(labelAciertos, new org.netbeans.lib.awtextra.AbsoluteConstraints(122, 71, 98, 31));

        labelErrores.setFont(new java.awt.Font("Segoe UI Semibold", 0, 36)); // NOI18N
        labelErrores.setForeground(new java.awt.Color(255, 255, 255));
        labelErrores.setText("0");
        panelLateral.add(labelErrores, new org.netbeans.lib.awtextra.AbsoluteConstraints(122, 188, 98, 31));

        labelRecargando.setVisible(false);
        labelRecargando.setBackground(new java.awt.Color(0, 255, 0));
        labelRecargando.setFont(new java.awt.Font("Segoe UI Semibold", 0, 36)); // NOI18N
        labelRecargando.setForeground(new java.awt.Color(255, 0, 255));
        labelRecargando.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelRecargando.setText("3");
        labelRecargando.setMaximumSize(new java.awt.Dimension(34, 48));
        labelRecargando.setMinimumSize(new java.awt.Dimension(34, 48));
        labelRecargando.setPreferredSize(new java.awt.Dimension(34, 48));
        panelLateral.add(labelRecargando, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 580, 50, 40));

        labelCargador.setFont(new java.awt.Font("Segoe UI Semibold", 0, 36)); // NOI18N
        labelCargador.setForeground(new java.awt.Color(255, 255, 255));
        labelCargador.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelCargador.setText("10");
        panelLateral.add(labelCargador, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 580, 50, 40));

        labelRecarga.setVisible(false);
        labelRecarga.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        labelRecarga.setForeground(new java.awt.Color(255, 255, 255));
        labelRecarga.setText("PULSA \"SPACE\" PARA RECARGAR");
        panelLateral.add(labelRecarga, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 627, -1, -1));

        labelTituloTiempo.setFont(new java.awt.Font("Segoe UI Semibold", 0, 36)); // NOI18N
        labelTituloTiempo.setForeground(new java.awt.Color(255, 255, 255));
        labelTituloTiempo.setText("TIEMPO");
        panelLateral.add(labelTituloTiempo, new org.netbeans.lib.awtextra.AbsoluteConstraints(63, 324, 217, 39));

        labelTiempo.setFont(new java.awt.Font("Segoe UI Semibold", 0, 36)); // NOI18N
        labelTiempo.setForeground(new java.awt.Color(255, 255, 255));
        labelTiempo.setText("50");
        panelLateral.add(labelTiempo, new org.netbeans.lib.awtextra.AbsoluteConstraints(122, 369, 98, 31));

        toggleBotonPausa.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        toggleBotonPausa.setForeground(new java.awt.Color(0, 0, 0));
        toggleBotonPausa.setText("PAUSA");
        toggleBotonPausa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                toggleBotonPausaMousePressed(evt);
            }
        });
        toggleBotonPausa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleBotonPausaActionPerformed(evt);
            }
        });
        toggleBotonPausa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                toggleBotonPausaKeyPressed(evt);
            }
        });
        panelLateral.add(toggleBotonPausa, new org.netbeans.lib.awtextra.AbsoluteConstraints(71, 439, 152, 62));

        fondoLateral.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        try{
            fondoLateral.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/fondoPantallaLateral2.jpg"))); // NOI18N
        }
        catch (NullPointerException e) {
            JOptionPane.showMessageDialog(this, "Non se cargou o Fondo de Pantalla correctamente");
        }
        fondoLateral.setMaximumSize(new java.awt.Dimension(300, 700));
        fondoLateral.setMinimumSize(new java.awt.Dimension(300, 700));
        fondoLateral.setPreferredSize(new java.awt.Dimension(300, 700));
        panelLateral.add(fondoLateral, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        juego.add(panelLateral, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 0, -1, -1));

        getContentPane().add(juego, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        panelGameOver.setVisible(false);
        panelGameOver.setBackground(new java.awt.Color(0, 0, 0));
        panelGameOver.setPreferredSize(new java.awt.Dimension(1000, 700));
        panelGameOver.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                panelGameOverKeyPressed(evt);
            }
        });

        labelBackgroundGameOver.setBackground(new java.awt.Color(0, 0, 0));
        labelBackgroundGameOver.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        try{
            labelBackgroundGameOver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/gameOver.jpg"))); // NOI18N
        }
        catch (NullPointerException e) {
            JOptionPane.showMessageDialog(this, "Non se cargou o Fondo de Pantalla correctamente");
        }

        panelBotonesGameOver.setBackground(new java.awt.Color(0, 0, 0));

        botonReiniciar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        botonReiniciar.setForeground(new java.awt.Color(0, 0, 0));
        botonReiniciar.setText("REINICIAR");
        botonReiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonReiniciarActionPerformed(evt);
            }
        });

        botonSalirJuego.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        botonSalirJuego.setForeground(new java.awt.Color(0, 0, 0));
        botonSalirJuego.setText("SALIR");
        botonSalirJuego.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirJuegoActionPerformed(evt);
            }
        });

        botonGuardarPuntuacion.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        botonGuardarPuntuacion.setForeground(new java.awt.Color(0, 0, 0));
        botonGuardarPuntuacion.setText("GUARDAR PUNTUACIÓN");
        botonGuardarPuntuacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarPuntuacionActionPerformed(evt);
            }
        });

        botonMostrarPuntuaciones.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        botonMostrarPuntuaciones.setForeground(new java.awt.Color(0, 0, 0));
        botonMostrarPuntuaciones.setText("MOSTRAR PUNTUACIONES");
        botonMostrarPuntuaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonMostrarPuntuacionesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBotonesGameOverLayout = new javax.swing.GroupLayout(panelBotonesGameOver);
        panelBotonesGameOver.setLayout(panelBotonesGameOverLayout);
        panelBotonesGameOverLayout.setHorizontalGroup(
            panelBotonesGameOverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBotonesGameOverLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botonReiniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 163, Short.MAX_VALUE)
                .addComponent(botonSalirJuego, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(panelBotonesGameOverLayout.createSequentialGroup()
                .addGap(205, 205, 205)
                .addGroup(panelBotonesGameOverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonMostrarPuntuaciones)
                    .addComponent(botonGuardarPuntuacion, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelBotonesGameOverLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {botonGuardarPuntuacion, botonMostrarPuntuaciones, botonReiniciar, botonSalirJuego});

        panelBotonesGameOverLayout.setVerticalGroup(
            panelBotonesGameOverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBotonesGameOverLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBotonesGameOverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonReiniciar)
                    .addComponent(botonSalirJuego, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(botonMostrarPuntuaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(botonGuardarPuntuacion)
                .addContainerGap())
        );

        panelBotonesGameOverLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {botonGuardarPuntuacion, botonMostrarPuntuaciones, botonReiniciar, botonSalirJuego});

        javax.swing.GroupLayout panelGameOverLayout = new javax.swing.GroupLayout(panelGameOver);
        panelGameOver.setLayout(panelGameOverLayout);
        panelGameOverLayout.setHorizontalGroup(
            panelGameOverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGameOverLayout.createSequentialGroup()
                .addContainerGap(191, Short.MAX_VALUE)
                .addGroup(panelGameOverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGameOverLayout.createSequentialGroup()
                        .addComponent(labelBackgroundGameOver, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(262, 262, 262))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGameOverLayout.createSequentialGroup()
                        .addComponent(panelBotonesGameOver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(138, 138, 138))))
        );
        panelGameOverLayout.setVerticalGroup(
            panelGameOverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGameOverLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(labelBackgroundGameOver, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(113, 113, 113)
                .addComponent(panelBotonesGameOver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(196, Short.MAX_VALUE))
        );

        getContentPane().add(panelGameOver, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonJugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonJugarActionPerformed
        iniciarPartida();
    }//GEN-LAST:event_botonJugarActionPerformed

    private void botonDificultadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonDificultadActionPerformed
        dialogDificultad.setVisible(true);
    }//GEN-LAST:event_botonDificultadActionPerformed

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        panelPrincipal.setVisible(false);
        panelInicio.setVisible(true);
        xogo1.setUsuario(null);
        textUsuarioInicio.setText(null);
        passwordUsuarioInicio.setText(null);
    }//GEN-LAST:event_botonSalirActionPerformed

    private void botonInstruccionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonInstruccionesActionPerformed
        dialogInstrucciones.setVisible(true);
    }//GEN-LAST:event_botonInstruccionesActionPerformed

    private void juegoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_juegoMouseClicked
    }//GEN-LAST:event_juegoMouseClicked

    private void panelJuegoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelJuegoMouseClicked
        if (!xogo1.isPausa()){
            sumarErro();
            restarBala();
        }
    }//GEN-LAST:event_panelJuegoMouseClicked

    private void panelJuegoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_panelJuegoKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ESCAPE){
            if (xogo1.isPausa()){
                quitarPausa();
            }
            else {
                pausa();
            }
        }
        if (!xogo1.isPausa()){
            if (evt.getKeyCode()==KeyEvent.VK_SPACE){
                timer.getTiempoRecarga().restart();
                labelCargador.setVisible(false);
                labelRecargando.setVisible(true);
            }
        }
    }//GEN-LAST:event_panelJuegoKeyPressed

    private void juegoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_juegoKeyPressed
    }//GEN-LAST:event_juegoKeyPressed

    private void panelJuegoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelJuegoMousePressed
    }//GEN-LAST:event_panelJuegoMousePressed

    private void botonReiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonReiniciarActionPerformed
        reiniciar();
        iniciarPartida();
    }//GEN-LAST:event_botonReiniciarActionPerformed

    private void botonSalirJuegoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirJuegoActionPerformed
        juego.setVisible(false);
        panelPrincipal.setVisible(true);
        botonGuardarPuntuacion.setEnabled(true);
        reiniciar();
    }//GEN-LAST:event_botonSalirJuegoActionPerformed

    private void panelLateralKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_panelLateralKeyPressed
    }//GEN-LAST:event_panelLateralKeyPressed

    private void panelGameOverKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_panelGameOverKeyPressed
    }//GEN-LAST:event_panelGameOverKeyPressed

    private void toggleBotonPausaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_toggleBotonPausaKeyPressed
    }//GEN-LAST:event_toggleBotonPausaKeyPressed

    private void toggleBotonPausaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toggleBotonPausaMousePressed
    }//GEN-LAST:event_toggleBotonPausaMousePressed

    private void toggleBotonPausaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleBotonPausaActionPerformed
        if (xogo1.isPausa()){
            quitarPausa();
        }
        else {
            pausa();
        }
        panelJuego.requestFocus();
        toggleBotonPausa.setSelected(false);
    }//GEN-LAST:event_toggleBotonPausaActionPerformed

    private void botonEstaticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEstaticoActionPerformed
        xogo1.setDificultad("Estático");
        dialogDificultad.setVisible(false);
    }//GEN-LAST:event_botonEstaticoActionPerformed

    private void botonDinamicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonDinamicoActionPerformed
        xogo1.setDificultad("Dinámico");
        dialogDificultad.setVisible(false);
    }//GEN-LAST:event_botonDinamicoActionPerformed

    private void botonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCerrarActionPerformed
        System.exit(0);
    }//GEN-LAST:event_botonCerrarActionPerformed

    private void botonAccederInvitadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAccederInvitadoActionPerformed
        panelPrincipal.setVisible(true);
        panelInicio.setVisible(false);
        xogo1.setUsuario("Invitado");
    }//GEN-LAST:event_botonAccederInvitadoActionPerformed

    private void botonIniciarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonIniciarSesionActionPerformed
        dialogInicioSesion.setVisible(true);
    }//GEN-LAST:event_botonIniciarSesionActionPerformed

    private void botonRegistrarseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegistrarseActionPerformed
        dialogRegistrar.setVisible(true);
    }//GEN-LAST:event_botonRegistrarseActionPerformed

    private void textUsuarioInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textUsuarioInicioActionPerformed
    }//GEN-LAST:event_textUsuarioInicioActionPerformed

    private void textUsuarioNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textUsuarioNovoActionPerformed
    }//GEN-LAST:event_textUsuarioNovoActionPerformed

    private void botonEnviarInicioSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEnviarInicioSesionActionPerformed
        dialogInicioSesion.setVisible(false);
        if (con.comprobarUsuario(textUsuarioInicio.getText())&& con.comprobarContrasenha(textUsuarioInicio.getText(),passwordUsuarioInicio.getText())){
            panelInicio.setVisible(false);
            panelPrincipal.setVisible(true);
            xogo1.setUsuario(textUsuarioInicio.getText());
        }
        else if (!con.comprobarUsuario(textUsuarioInicio.getText())){
            JOptionPane.showMessageDialog(panelBotones, "El usuario no existe");
        }
        else {
            JOptionPane.showMessageDialog(panelBotones, "La contraseña no es correcta");
        }
    }//GEN-LAST:event_botonEnviarInicioSesionActionPerformed

    @SuppressWarnings("deprecation")
    private void botonEnviarNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEnviarNovoActionPerformed
        if (textUsuarioNovo.getText().length()<5 || passwordUsuarioNovo.getText().length()<5){
            JOptionPane.showMessageDialog(null, "El usuario y la contraseña deben tener más de 5 caracteres");
        }
        else {
            dialogRegistrar.setVisible(false);
            con.engadirUsuarioNovo(textUsuarioNovo.getText(), passwordUsuarioNovo.getText());
        }
        textUsuarioNovo.setText(null);
        passwordUsuarioNovo.setText(null);
    }//GEN-LAST:event_botonEnviarNovoActionPerformed

    private void botonGuardarPuntuacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarPuntuacionActionPerformed
        con.guardarPuntuacion(xogo1.getUsuario());
        botonGuardarPuntuacion.setEnabled(false);
    }//GEN-LAST:event_botonGuardarPuntuacionActionPerformed

    private void panelJuegoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelJuegoMouseExited
        
    }//GEN-LAST:event_panelJuegoMouseExited

    private void juegoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_juegoMouseExited
        
    }//GEN-LAST:event_juegoMouseExited

    private void botonMostrarPuntuacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonMostrarPuntuacionesActionPerformed
        dialogPuntuaciones.setVisible(true);
        mostrarTabla();
    }//GEN-LAST:event_botonMostrarPuntuacionesActionPerformed

    private void botonReiniciarEstadisticasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonReiniciarEstadisticasActionPerformed
        int confirmar=JOptionPane.showConfirmDialog(panelBotones, "Estás seguro de que quieres reiniciar las estadísticas?");
        if (JOptionPane.OK_OPTION == confirmar){
            con.reiniciarEstadisticas();
            JOptionPane.showMessageDialog(panelBotones, "Las Estadísticas se reiniciaron con éxito!");
        }
    }//GEN-LAST:event_botonReiniciarEstadisticasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                cambiarApariencia();
                new VentanaPrincipal().setVisible(true);
            }
        });
    }
    
    
    /**
     * Crea un Obxeto da clase Xogo 
     */
    private void iniciarPartida(){
        panelPrincipal.setVisible(false);
        juego.setVisible(true);
        timer.getTiempo().start();
        timer.getDuracion().start();
        xogo1.empezarPartida();
        panelJuego.setComponentZOrder(fondoJuego, panelJuego.getComponentCount()-1);
    }
    
    
    /**
     * Colorea o Cadrado no Panel
     * @param botonCadrado Label do Cadrado a colorear
     */
    public void pintarCadrado(JButton botonCadrado){
        panelJuego.add(botonCadrado);
        panelJuego.updateUI();
    }
    
    
    
    
    
    
    /**
     * Borra o Cadrado no Panel
     * @param botonCadrado Label do Cadrado a colorear
     */
    public void borrarCadrados(JButton botonCadrado){
        panelJuego.remove(botonCadrado);
        panelJuego.updateUI();
    }
    
    /**
     * Suma un acerto e suma un numero de segundos dependendo do obxetivo
     * @param obxetivo Obxetivo que se clickou
     */
    public void sumarAcerto (Obxetivo obxetivo){
        if (xogo1.getBalas()>0){
            xogo1.setPuntos(xogo1.getPuntos()+1);
            escribir(xogo1.getPuntos(), labelAciertos);
            if (xogo1.getPuntos()%30==0){
                xogo1.setErro(xogo1.getErro()+2);
            }
            if (xogo1.getPuntos()%50==0){
                xogo1.setAcerto(xogo1.getAcerto()+1);
            }
            String a=labelTiempo.getText();
            int b=(int) Double.parseDouble(a);
            b += obxetivo.getAcerto();
            labelTiempo.setText(b+"");
        }
    }
    
    
    private void sumarErro (){
        xogo1.setFallos(xogo1.getFallos()+1);
        escribir(xogo1.getFallos(), labelErrores);
        String a=labelTiempo.getText();
        int b=(int) Double.parseDouble(a);
        b -= xogo1.getErro();
        labelTiempo.setText(b+"");
        if (b<=0){
            labelTiempo.setText("0");
            mostrarFinDeXogo();
        }
    }
    
    /**
     * Resta unha bala na labelCargador
     */
    public void restarBala (){
        xogo1.setBalas(xogo1.getBalas()-1);
        escribir(xogo1.getBalas(), labelCargador);
        if (xogo1.getBalas()<=0){
            labelCargador.setText("0");
            labelRecarga.setVisible(true);
        }
        else if (xogo1.getBalas()<=3){
            labelCargador.setForeground(Color.red);
        }
    }
    
    
    /**
     * Escribe nas distintas JLabel das puntuacións
     * @param num int que imos a escribir
     * @param etiqueta JLabel na que imos a escribir
     */
    private void escribir (int num, JLabel etiqueta){
        etiqueta.setText(""+num);
    }
    
    /**
     * Fai que aparezan os Obxetivos dándolles unha posición nova
     * @param tempo tempo transcorrido
     */
    public void aparecerCadrados(int tempo){
        if (tempo%5==0){
            xogo1.getObxetivoVermello().getBotonCadrado().setVisible(true);
            xogo1.getObxetivoVermello().xerarPosicionObxetivo();
        }
        if (tempo%10==0){
            xogo1.getObxetivoRosa().getBotonCadrado().setVisible(true);
            xogo1.getObxetivoRosa().xerarPosicionObxetivo();
        }
    }
    
    /**
     * Fai que desaparezan os Obxetivos
     * @param tempo tempo transcorrido
     */
    public void desaparecerCadrados(int tempo){
        if (tempo%5==2){
            xogo1.getObxetivoRosa().getBotonCadrado().setVisible(false);
        }
        if (tempo%10==8){
            xogo1.getObxetivoVermello().getBotonCadrado().setVisible(false);
        }
    }
    
    
    /**
     * Engade o Listener ao Obxetivo
     * @param obxetivo Obxetivo creado en Obxetivo
     */
    public void engadirObxetivos (Obxetivo obxetivo){
        obxetivosListener(obxetivo);
    }
    
    private void obxetivosListener(Obxetivo obxetivo){
        clickObxetivo= new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if(!xogo1.isPausa() && xogo1.getBalas()>0 && !timer.getTiempoRecarga().isRunning()){
                    sumarAcerto(obxetivo);
                    cambiarObstáculos();
                    restarBala();
                    if(obxetivo==xogo1.getObxetivoVerde()){
                        obxetivo.xerarPosicionObxetivo();
                    }
                    else if (obxetivo==xogo1.getObxetivoVermello()){
                        if (xogo1.getDificultad()=="Dinámico"){
                            obxetivo.getBotonCadrado().setVisible(false);
                        }
                    }
                    else if (obxetivo==xogo1.getObxetivoRosa()) {
                        xogo1.setBalas(xogo1.getBalas()+4);
                        escribir(xogo1.getBalas(), labelCargador);
                        if (xogo1.getDificultad()=="Dinámico"){
                            obxetivo.getBotonCadrado().setVisible(false);
                        }
                    }
                }
            }
        };
        obxetivo.getBotonCadrado().addActionListener(clickObxetivo);
    }
    
    
    /**
     * Comproba que os obxetivos non coincidan con outros botóns
     * @param obxetivo Obxetivo
     * @return true se non coincide con outro botón,pola contra false
     */
    public boolean comprobarObxetivos (Obxetivo obxetivo){
        boolean correcto=true;
        for (int contArray=0; contArray<arrayBotones.size(); contArray++) {
            if (!comprobarExes(arrayBotones.get(contArray),obxetivo)){
                correcto=false;
            }
        }
        return correcto;
    }
    
    private boolean comprobarExes(JButton boton,Obxetivo obxetivo){
        boolean correctoExe=true;
        for (int contX=boton.getX(); contX<(boton.getX()+obxetivo.getLadoCadrado()*2); contX++) {
            for (int contY=boton.getY(); contY<(boton.getY()+obxetivo.getLadoCadrado()*2); contY++) {
                if (contX==obxetivo.getX() && contY==obxetivo.getY()){
                    correctoExe=false;
                }
            }
            
        }
        return correctoExe;
    }
    
    /**
     * Comproba si o obstáculo coincide con outro botón do array arrayBotones
     * @param obstaculo obstáculo a comprobar
     * @return true se non coincide con outro botón,pola contra false
     */
    public boolean comprobarObstaculos (Obstaculo obstaculo){
        boolean correcto=true;
        for (int botonArray=0; botonArray<arrayBotones.size(); botonArray++) {
            JButton boton=arrayBotones.get(botonArray);
            for (int botonObstaculoCont=0; botonObstaculoCont<obstaculo.getCadrados().size(); botonObstaculoCont++) {
                JButton botonObstaculo=obstaculo.getCadrados().get(botonObstaculoCont).getBotonCadrado();
                if (boton.getLocation().equals(botonObstaculo.getLocation())){
                    correcto=false;
                }
            }
        }
        return correcto;
    }
    
    
    /**
     * Engade os botóns do obstáculo ao arrayBotones
     * @param obstaculo Obstáculo a engadir
     */
    public void engadirObstaculos (Obstaculo obstaculo){
        engadirBotons(obstaculo);
    }
    
    
    /**
     * Engade o Listener ao Obstáculo
     * @param obstaculo Obstáculo ao que queremos engadir o Listener
     */
    public void engadirListener(Obstaculo obstaculo){
        mouse = new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (!xogo1.isPausa()){
                    sumarErro();
                    restarBala();
                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
                if (!xogo1.isPausa()){
                    sumarErro();
                }
            }
            @Override
            public void mouseExited(MouseEvent e) {
            }
        };
        for (int cont=0; cont<obstaculo.getCadrados().size(); cont++) {
            obstaculo.getCadrados().get(cont).getBotonCadrado().addMouseListener(mouse);
        }
    }
    
    private void engadirBotons(Obstaculo obstaculo){
        for (int cont=0; cont<obstaculo.getCadrados().size(); cont++) {
            arrayBotones.add(obstaculo.getCadrados().get(cont).getBotonCadrado());
        }
    }
    
    
    /**
     * Mostra o menú de fin de xogo
     */
    public void mostrarFinDeXogo(){
        juego.setVisible(false);
        panelGameOver.setVisible(true);
        timer.getTiempo().stop();
        timer.getDuracion().stop();
        arrayBotones.clear();
    }
    
    
    private void reiniciar(){
        labelTiempo.setText("50");
        labelAciertos.setText("0");
        labelErrores.setText("0");
        botonGuardarPuntuacion.setEnabled(true);
        recargar();
        xogo1.eliminarTodo();
        panelGameOver.setVisible(false);
        xogo1.reiniciarEstadisticas();
    }
    
    /**
     * Pausa o xogo
     */
    public void pausa(){
        toggleBotonPausa.setText("START");
        xogo1.setPausa(true);
        timer.getTiempo().stop();
        timer.getDuracion().stop();
    }
    
    /**
     * Quita a pausa do xogo
     */
    public void quitarPausa(){
        toggleBotonPausa.setText("PAUSE");
        xogo1.setPausa(false);
        timer.getTiempo().restart();
        timer.getDuracion().start();
    }
    
    
    /**
     * Recarga o cargador
     */
    public void recargar(){
        xogo1.setBalas(10);
        xogo1.setPausa(false);
        labelCargador.setVisible(true);
        labelRecargando.setVisible(false);
        labelRecargando.setText("3");
        labelCargador.setText("10");
        labelCargador.setForeground(Color.white);
        labelRecarga.setVisible(false);
    }

    
    /**
     * Pon un icono na ventana do JFrame
     * @return Imaxe a poñer de Icono
     */
    @Override
    public Image getIconImage() {
        Image retValue =null;
        try{
            retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("recursos/icon.png"));
        }
        catch (NullPointerException e){
        }
        return retValue;
    }
    
    
    private static void cambiarApariencia(){
        try {
            UIManager.setLookAndFeel(new GraphiteLookAndFeel());
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void mostrarTabla(){
        try {
            con.listar();
            rellenarTabla();
        }
        catch (SQLException | NullPointerException e){
            JOptionPane.showMessageDialog(panelBotones, "Error al mostrar la tabla");
            dialogPuntuaciones.setVisible(false);
        }
    }
    
    private void rellenarTabla() throws SQLException{
        DefaultTableModel model=new DefaultTableModel();
        ArrayList<Object> nombreColumna = new ArrayList<>();
        nombreColumna.add("ID");
        nombreColumna.add("NOMBRE");
        nombreColumna.add("ACIERTOS");
        nombreColumna.add("FALLOS");
        nombreColumna.add("DURACIÓN");
        nombreColumna.add("FECHA");
        nombreColumna.add("DIFICULTAD");

        for(Object columna : nombreColumna){
            model.addColumn(columna);
        }
        for(Partida DatoNivel : con.listar()){
            model.addRow(new Object[]{ DatoNivel.getId(),
                                       DatoNivel.getNombre(),
                                       DatoNivel.getAciertos(),
                                       DatoNivel.getErrores(),
                                       DatoNivel.getDuracion(),
                                       DatoNivel.getFecha(),
                                       DatoNivel.getDificultad()
                                      }); 
        }
        tablaPuntuaciones.setModel(model);
    }
    
    
    private void cambiarObstáculos (){
        if (xogo1.getPuntos()%10==0){
            arrayBotones.clear();
            xogo1.getObstaculos().clear();
            xogo1.xerarObstaculos();
            xogo1.establecerPosicionObstaculos();
            xogo1.pintarObstaculos();
            panelJuego.setComponentZOrder(fondoJuego, panelJuego.getComponentCount()-1);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAccederInvitado;
    private javax.swing.JButton botonCerrar;
    private javax.swing.JButton botonDificultad;
    private javax.swing.JButton botonDinamico;
    private javax.swing.JButton botonEnviarInicioSesion;
    private javax.swing.JButton botonEnviarNovo;
    private javax.swing.JButton botonEstatico;
    private javax.swing.JButton botonGuardarPuntuacion;
    private javax.swing.JButton botonIniciarSesion;
    private javax.swing.JButton botonInstrucciones;
    private javax.swing.JButton botonJugar;
    private javax.swing.JButton botonMostrarPuntuaciones;
    private javax.swing.JButton botonRegistrarse;
    private javax.swing.JButton botonReiniciar;
    private javax.swing.JButton botonReiniciarEstadisticas;
    private javax.swing.JButton botonSalir;
    private javax.swing.JButton botonSalirJuego;
    private javax.swing.JDialog dialogDificultad;
    private javax.swing.JDialog dialogInicioSesion;
    private javax.swing.JDialog dialogInstrucciones;
    private javax.swing.JDialog dialogPuntuaciones;
    private javax.swing.JDialog dialogRegistrar;
    private javax.swing.JLabel fondoJuego;
    private javax.swing.JLabel fondoLateral;
    private javax.swing.JLabel fondoPantalla;
    private javax.swing.JLabel fondoPantallaInicio;
    private javax.swing.JLabel fondoPantallaPrincipal;
    private javax.swing.JLabel fondoPantallaRegistrar;
    private javax.swing.JLabel fondoPuntuaciones;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel juego;
    private javax.swing.JLabel labelAciertos;
    private javax.swing.JLabel labelBackgroundDialog;
    private javax.swing.JLabel labelBackgroundDialog1;
    private javax.swing.JLabel labelBackgroundGameOver;
    private javax.swing.JLabel labelCargador;
    private javax.swing.JLabel labelContrasinal;
    private javax.swing.JLabel labelContrasinalNovo;
    private javax.swing.JLabel labelErrores;
    private javax.swing.JLabel labelRecarga;
    private javax.swing.JLabel labelRecargando;
    private javax.swing.JLabel labelTiempo;
    private javax.swing.JLabel labelTitulo;
    private javax.swing.JLabel labelTituloAciertos;
    private javax.swing.JLabel labelTituloCargador;
    private javax.swing.JLabel labelTituloErrores;
    private javax.swing.JLabel labelTituloTiempo;
    private javax.swing.JLabel labelUsuario;
    private javax.swing.JLabel labelUsuarioNovo;
    private javax.swing.JPanel panelBotones;
    private javax.swing.JPanel panelBotonesGameOver;
    private javax.swing.JPanel panelBotonesInicio;
    private javax.swing.JPanel panelDialog;
    private javax.swing.JPanel panelDialogInicioSesion;
    private javax.swing.JPanel panelDialogRegistrarse;
    private javax.swing.JPanel panelGameOver;
    private javax.swing.JPanel panelInicio;
    private javax.swing.JPanel panelJuego;
    private javax.swing.JPanel panelLateral;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JPanel panelPuntuaciones;
    private javax.swing.JPasswordField passwordUsuarioInicio;
    private javax.swing.JPasswordField passwordUsuarioNovo;
    private javax.swing.JTable tablaPuntuaciones;
    private javax.swing.JTextField textUsuarioInicio;
    private javax.swing.JTextField textUsuarioNovo;
    private javax.swing.JTextArea textoInstrucciones;
    private javax.swing.JLabel tituloPuntuaciones;
    private javax.swing.JToggleButton toggleBotonPausa;
    // End of variables declaration//GEN-END:variables
}
